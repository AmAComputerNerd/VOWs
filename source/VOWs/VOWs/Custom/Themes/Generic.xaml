<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:VOWs.Custom">

    <Style TargetType="{x:Type custom:MenuTextBox}">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type custom:MenuTextBox}">
                        <Border Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal"
                                            Margin="5,0">

                                    <Image Source="{TemplateBinding Source, Converter={StaticResource strToImg}}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           MaxWidth="15" MaxHeight="15"/>

                                    <TextBlock Text="{TemplateBinding Descriptor}"
                                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Margin="5,0,0,0"/>

                                </StackPanel>
                                <TextBox Text="{TemplateBinding Text}"
                                         Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
                                         HorizontalAlignment="Right" VerticalContentAlignment="Center"
                                         TextAlignment="Right"
                                         Margin="5,2" Padding="3,0"
                                         Grid.Column="1">
                                    <TextBox.BorderBrush>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Rectangle StrokeDashArray="2,1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"
                                                           Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=ActualWidth}"
                                                           Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=ActualHeight}"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </TextBox.BorderBrush>
                                </TextBox>
                            </Grid>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#474747"/>
            <Setter Property="Foreground" Value="#cccccc"/>
            <Setter Property="BorderBrush" Value="{Binding Globals.Accent}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="AcceptsReturn" Value="True"/>
        </Style.Setters>

        <Style.Triggers>
            <!--Theming triggers. These are pretty long, annoyingly, because Trigger objects can't be nested.-->
            <!--Default theming triggers. Anything that changes based ONLY on the theme selected should go in here.-->
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Black">
                <Setter Property="Background" Value="#262626"/>
                <Setter Property="Foreground" Value="#dddddd"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Dark">
                <Setter Property="Background" Value="#474747"/>
                <Setter Property="Foreground" Value="#cccccc"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Light">
                <Setter Property="Background" Value="#ebebeb"/>
                <Setter Property="Foreground" Value="#333333"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="White">
                <Setter Property="Background" Value="#ffffff"/>
                <Setter Property="Foreground" Value="#141414"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type custom:MenuComboBox}">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type custom:MenuComboBox}">
                        <Border Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Horizontal"
                                            Margin="5,0">

                                    <Image Source="{TemplateBinding Source, Converter={StaticResource strToImg}}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           MaxWidth="15" MaxHeight="15"/>

                                    <TextBlock Text="{TemplateBinding Descriptor}"
                                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Margin="5,0,0,0"/>

                                </StackPanel>

                                <Grid Grid.Column="1"
                                      Margin="5,2"
                                      HorizontalAlignment="Right">

                                    <ToggleButton x:Name="ToggleButton"
                                                  Focusable="False"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                  ClickMode="Press"
                                                  OverridesDefaultStyle="True">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="20"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="Border"
                                                            Grid.ColumnSpan="2"
                                                            Background="{TemplateBinding Background}"
                                                            BorderThickness="1">
                                                        <Border.BorderBrush>
                                                            <VisualBrush>
                                                                <VisualBrush.Visual>
                                                                    <Rectangle StrokeDashArray="2,1" Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type custom:MenuComboBox}}, Path=BorderBrush}" StrokeThickness="1"
                                                                               Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                                               Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=ActualHeight}"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Border.BorderBrush>
                                                    </Border>

                                                    <Border Margin="1,0"
                                                            Background="Transparent"/>

                                                    <Path x:Name="Arrow"
                                                          Grid.Column="1"
                                                          Fill="{Binding Globals.Accent}"
                                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>

                                    <!--I can't tell you why this works, but the spacing breaks without both Padding and Margin.-->
                                    <!--Please do not remove.-->
                                    <Border Padding="3,0,10,0"
                                            Margin="3,0,10,0">
                                        <ContentPresenter x:Name="ContentSite"
                                                          IsHitTestVisible="False"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    </Border>

                                    <!--Same thing applies for the EditableTextBox - DO NOT TOUCH PADDING OR MARGIN!-->
                                    <TextBox x:Name="PART_EditableTextBox"
                                             Style="{x:Null}"
                                             Margin="3,0,10,0" Padding="3,0,10,0"
                                             HorizontalAlignment="Left" VerticalAlignment="Center"
                                             Focusable="True"
                                             Background="Transparent" Foreground="{TemplateBinding Foreground}"
                                             CaretBrush="{TemplateBinding Foreground}"
                                             BorderThickness="0"
                                             Visibility="Collapsed"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                    <Popup x:Name="Popup"
                                           Placement="Bottom"
                                           IsOpen="{TemplateBinding IsDropDownOpen}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           PopupAnimation="Slide">
                                        <Grid x:Name="DropDown"
                                              SnapsToDevicePixels="True"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <Border x:Name="DropDownBorder"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="1">
                                                <Border.BorderBrush>
                                                    <VisualBrush>
                                                        <VisualBrush.Visual>
                                                            <Rectangle StrokeDashArray="2,1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"
                                                                       Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                                       Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=ActualHeight}"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                            <ScrollViewer Margin="4,6,4,6"
                                                          SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True"
                                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>
                                
                                </Grid>
                            </Grid>
                            
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#474747"/>
            <Setter Property="Foreground" Value="#cccccc"/>
            <Setter Property="BorderBrush" Value="{Binding Globals.Accent}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        </Style.Setters>

        <Style.Triggers>
            <!--Theming triggers. These are pretty long, annoyingly, because Trigger objects can't be nested.-->
            <!--Default theming triggers. Anything that changes based ONLY on the theme selected should go in here.-->
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Black">
                <Setter Property="Background" Value="#262626"/>
                <Setter Property="Foreground" Value="#dddddd"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Dark">
                <Setter Property="Background" Value="#474747"/>
                <Setter Property="Foreground" Value="#cccccc"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="Light">
                <Setter Property="Background" Value="#ebebeb"/>
                <Setter Property="Foreground" Value="#333333"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Globals.Theme}" Value="White">
                <Setter Property="Background" Value="#ffffff"/>
                <Setter Property="Foreground" Value="#141414"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <Style TargetType="{x:Type custom:Page}">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type custom:Page}">
                        <Border Background="{TemplateBinding Background}"
                                Width="{TemplateBinding PageWidth}" Height="{TemplateBinding PageHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">

                            <RichTextBox Margin="{TemplateBinding Padding}"
                                         Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
                                         AcceptsReturn="True" AcceptsTab="True"
                                         AllowDrop="True"
                                         CaretBrush="{TemplateBinding Foreground}"
                                         FlowDirection="{TemplateBinding FlowDirection}"
                                         FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                         FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}"
                                         IsUndoEnabled="False"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="{Binding Globals.Accent}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="20"/>
        </Style.Setters>

        <Style.Triggers>
            
        </Style.Triggers>
        
    </Style>
    
</ResourceDictionary>
