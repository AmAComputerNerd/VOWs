<UserControl x:Class="VOWs.MVVM.View.DocumentEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VOWs.MVVM.View" 
             xmlns:custom="clr-namespace:VOWs.Custom"
             xmlns:viewmodel="clr-namespace:VOWs.MVVM.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:DocumentEditViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <!--Create the grid to hold this View's content.-->
    <Grid Style="{StaticResource ThemedGrid}">
        <!--Create the main page content. This includes the Page view, categories and associated category content.-->
        <DockPanel>

            <!--Create the category buttons. Some of these buttons only appear under certain context.-->
            <Border DockPanel.Dock="Top"
                    Height="30"
                    Style="{StaticResource MenuBorder}">
                <StackPanel Orientation="Horizontal">
                    <!--Create the Logo button. This links to a command that will open a overlaying menu from the left of the screen, containing file settings.-->
                    <ToggleButton Margin="0,0,2,0"
                                  IsChecked="{Binding VOWs_Selected}"
                                  Style="{StaticResource MenuButton_VOWs}">
                        <ToggleButton.Content>
                            <Image Source="{Binding Logo.ImageSource}"/>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <!--Create the permanent category buttons. These are always visible - their visibility is not linked to any code-behind variable.-->
                    <RadioButton Content="Home"
                                 IsChecked="{Binding Tabs_HomeSelected}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="Text"
                                 IsChecked="{Binding Tabs_TextSelected}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="Media"
                                 IsChecked="{Binding Tabs_MediaSelected}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="Page"
                                 IsChecked="{Binding Tabs_PageSelected}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="View"
                                 IsChecked="{Binding Tabs_ViewSelected}"
                                 Style="{StaticResource MenuButton_Category}"/>

                    <!--Create the non-permanent category buttons. These may show or not show depending on context, for example, what object if any is selected in the document.-->
                    <RadioButton Content="Version Control"
                                 IsChecked="{Binding Tabs_VersionControlSelected}"
                                 Visibility="{Binding Tabs_VersionControl}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="Image"
                                 Margin="10,0,0,0"
                                 IsChecked="{Binding Tabs_ImageSelected}"
                                 Visibility="{Binding Tabs_Image}"
                                 Style="{StaticResource MenuButton_Category}"/>
                    <RadioButton Content="Video"
                                 Margin="10,0,0,0"
                                 IsChecked="{Binding Tabs_VideoSelected}"
                                 Visibility="{Binding Tabs_Video}"
                                 Style="{StaticResource MenuButton_Category}"/>
                </StackPanel>
            </Border>

            <!--Create the category content display area. This area itself can be "docked"; it is linked to a variable in the code-behind that can completely remove it when docked.-->
            <Border DockPanel.Dock="Top"
                    Visibility="{Binding Content}"
                    Height="90"
                    Style="{StaticResource MenuBorder}">
                <Grid>

                    <!--Create a StackPanel with content for the 'Home' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Home' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Home, FallbackValue=Visible}">
                        <Border Style="{StaticResource MenuSection}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <TextBlock Text="Font"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MenuSection_Title}"/>
                                <UniformGrid Rows="3"
                                             Grid.Row="1">
                                    <custom:MenuComboBox Source="/Resources/Images/menu_font-family.png"
                                                         Descriptor="Family"
                                                         SelectedItem="{Binding FontSelectedFamily}"
                                                         IsEditable="False" IsReadOnly="True">
                                        <custom:MenuComboBox.Items>
                                            <ComboBoxItem Content="Arial"
                                                          FontFamily="Arial"/>
                                            <ComboBoxItem Content="Calibri"
                                                          FontFamily="Calibri"
                                                          IsSelected="True"/>
                                            <ComboBoxItem Content="Consolas"
                                                          FontFamily="Consolas"/>
                                        </custom:MenuComboBox.Items>
                                    </custom:MenuComboBox>
                                    <custom:MenuComboBox Source="/Resources/Images/menu_font-family.png"
                                                         Descriptor="Size"
                                                         SelectedItem="{Binding FontSelectedSize}"
                                                         IsEditable="True" IsReadOnly="False"
                                                         IsTextSearchEnabled="False">
                                        <custom:MenuComboBox.Items>
                                            <ComboBoxItem Content="8"/>
                                            <ComboBoxItem Content="9"/>
                                            <ComboBoxItem Content="10"/>
                                            <ComboBoxItem Content="11"
                                                          IsSelected="True"/>
                                            <ComboBoxItem Content="12"/>
                                            <ComboBoxItem Content="14"/>
                                            <ComboBoxItem Content="16"/>
                                            <ComboBoxItem Content="18"/>
                                            <ComboBoxItem Content="20"/>
                                            <ComboBoxItem Content="22"/>
                                            <ComboBoxItem Content="24"/>
                                            <ComboBoxItem Content="26"/>
                                            <ComboBoxItem Content="28"/>
                                            <ComboBoxItem Content="36"/>
                                            <ComboBoxItem Content="48"/>
                                            <ComboBoxItem Content="72"/>
                                        </custom:MenuComboBox.Items>
                                    </custom:MenuComboBox>
                                    <custom:MenuTextBox Source="/Resources/Images/menu_colour.png"
                                                        Descriptor="Colour"
                                                        Text="{Binding FontSelectedForeground, FallbackValue=#000000}"/>
                                </UniformGrid>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource MenuSection}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Page"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MenuSection_Title}"/>
                                <UniformGrid Rows="3"
                                             Grid.Row="1">
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="New Page"
                                            Style="{StaticResource MenuButton}"
                                            Command="{Binding Pages_CreatePageCommand}"/>
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="Remove Page"
                                            Style="{StaticResource MenuButton}"
                                            Command="{Binding Pages_RemovePageCommand}"/>
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="Clear Pages"
                                            Style="{StaticResource MenuButton}"
                                            Command="{Binding Pages_ClearPagesCommand}"/>
                                </UniformGrid>
                            </Grid>
                        </Border>
                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Text' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Text' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Text, FallbackValue=Collapsed}">

                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Media' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Media' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Media, FallbackValue=Collapsed}">

                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Page' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Page' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Page, FallbackValue=Collapsed}">
                        <Border Style="{StaticResource MenuSection}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="New"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MenuSection_Title}"/>
                                <StackPanel Orientation="Horizontal"
                                            Grid.Row="1">
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="New Page"
                                            Style="{StaticResource MenuButton2}"
                                            Command="{Binding Pages_CreatePageCommand}"/>
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="New Slide"
                                            Style="{StaticResource MenuButton2}"
                                            Command="{Binding Pages_CreateSlideCommand}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource MenuSection}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Temporary"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MenuSection_Title}"/>
                                <UniformGrid Rows="2"
                                             Grid.Row="1">
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="Remove Latest Page / Slide"
                                            Style="{StaticResource MenuButton}"
                                            Command="{Binding Pages_RemovePageCommand}"/>
                                    <Button Content="/Resources/Images/menu_page.png"
                                            Tag="Clear All Pages / Slides"
                                            Style="{StaticResource MenuButton}"
                                            Command="{Binding Pages_ClearPagesCommand}"/>
                                </UniformGrid>
                            </Grid>
                        </Border>
                    </StackPanel>

                    <!--Create a StackPanel with content for the 'View' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'View' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_View, FallbackValue=Collapsed}">

                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Version Control' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Version Control' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_VersionControl, FallbackValue=Collapsed}">

                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Image' special category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Image' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Image, FallbackValue=Collapsed}">

                    </StackPanel>

                    <!--Create a StackPanel with content for the 'Video' category. This panel's visibility is connected to a variable in the code-behind that can completely remove it when 'Video' is unselected, or the border it sits in is docked.-->
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Content_Video, FallbackValue=Collapsed}">

                    </StackPanel>

                </Grid>
            </Border>

            <!--Create the PageVM display area. This contains the ViewModel responsible for handling all document / workspace related display purposes.-->
            <ContentControl Content="{Binding PageVM}"
                            Margin="0,20,0,0"
                            VerticalAlignment="Stretch"/>

        </DockPanel>

        <!--Create the dockable side bar. This border contains all of the content for this submenu, and by default is closed.-->
        <Border HorizontalAlignment="Left"
                Width="75"
                Visibility="{Binding SideBar, FallbackValue=Collapsed}"
                Style="{StaticResource ThemedBorder}">

            <UniformGrid Rows="7">
                <ToggleButton Content="Back"
                              IsChecked="{Binding VOWs_Selected}"
                              Style="{StaticResource ThemedToggleButton}"/>
                <Button Content="Home"
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_HomeCommand}"/>
                <Button Content="Info"
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_InfoCommand}"/>
                <Button Content="Save"
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_SaveCommand}"/>
                <Button Content="Print"
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_PrintCommand}"/>
                <Button Content="Export"
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_ExportCommand}"/>
                <Button Content="Dir."
                        Style="{StaticResource ThemedButton}"
                        Command="{Binding SideMenu_DirCommand}"/>
            </UniformGrid>

        </Border>
    </Grid>

</UserControl>
