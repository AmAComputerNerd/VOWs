<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:VOWs.Converters">
    
    <!--String -> Image converter definition. Marvel at the line that took me 4 hours to figure out (Style.Resources and Binding tag expressions, the only 
    other ways without sticking this line in App resources, just didn't work, okay! :/).-->
    <converters:StringToBitmapImageConverter x:Key="ToImg"/>

    <!--Style for the main menu button within the editor.-->
    <Style x:Key="VOWsButton"
           TargetType="{x:Type Button}">

        <Style.Setters>
            <!--Default values to show up in the XAML view, and to use as a backup if QuickSettings is not available for whatever reason.-->
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="BorderBrush" Value="#3A3A3A"/>
            <Setter Property="BorderThickness" Value="1,1,1,0"/>
            <Setter Property="Tag" Value="/Resources/Images/VOWsuite-logos_white.png"/>

            <!--Template to override default Button hover and click properties as well as style the image within. This took too long to get working...-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <!--This image will correlate to one of two versions of the VOWs logo, depending on what theme is selected.-->
                            <!--We use an unused Button property, Tag, to store the URI. This could even be repurposed to work with any Image potentially.-->
                            <Image Height="50"
                                   Width="50"
                                   Margin="0,2,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="{TemplateBinding Tag, Converter={StaticResource ToImg}}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <!--Theming triggers. These are pretty long, annoyingly, because Trigger objects can't be nested.-->
            <!--Default theming triggers. Anything that changes based ONLY on the theme selected should go in here.-->
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Dark">
                <Setter Property="Background" Value="#2A2A2A"/>
                <Setter Property="BorderBrush" Value="#3A3A3A"/>
                <!--Change the image to the white version so it stands out from the background.-->
                <Setter Property="Tag" Value="/Resources/Images/VOWsuite-logos_white.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Light">
                <Setter Property="Background" Value="#D6D6D6"/>
                <Setter Property="BorderBrush" Value="#C5C5C5"/>
                <!--Change the image to the black version so it stands out from the background.-->
                <Setter Property="Tag" Value="/Resources/Images/VOWsuite-logos_black.png"/>
            </DataTrigger>

            <!--Theming triggers for the IsMouseOver event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#1f1f1f"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#E0E0E0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Theming triggers for the IsPressed event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#151515"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#EAEAEA"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--Style for category buttons at the top of the page within the editor.-->
    <Style x:Key="CategoryButton"
           TargetType="{x:Type Button}">

        <Style.Setters>
            <!--Default values to show up in the XAML view, and to use as a backup if QuickSettings is not available for whatever reason.-->
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="Foreground" Value="#C0C0C0"/>
            <Setter Property="BorderBrush" Value="#3A3A3A"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="3,0,0,0"/>

            <!--Template to override default Button hover and click properties. Also adds some extra flair, so that's neat.-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}"
                                Padding="20,0,20,0"
                                CornerRadius="5">
                            
                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="14"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <!--Theming triggers. These are pretty long, annoyingly, because Trigger objects can't be nested.-->
            <!--Default theming triggers. Anything that changes based ONLY on the theme selected should go in here.-->
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Dark">
                <Setter Property="Background" Value="#2A2A2A"/>
                <Setter Property="Foreground" Value="#C0C0C0"/>
                <Setter Property="BorderBrush" Value="#3A3A3A"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Light">
                <Setter Property="Background" Value="#D6D6D6"/>
                <Setter Property="Foreground" Value="#3F3F3F"/>
                <Setter Property="BorderBrush" Value="#C5C5C5"/>
            </DataTrigger>

            <!--Theming triggers for the IsMouseOver event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#1f1f1f"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#E0E0E0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Theming triggers for the IsPressed event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#151515"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#EAEAEA"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
        
    </Style>

    <!--Style for the display name for the category off to the side of menu buttons at the top of the page within the editor.-->
    <Style x:Key="CategoryDisplayName"
           TargetType="{x:Type Border}">

        <Style.Setters>
            <!--Default values to show up in the XAML view, and to use as a backup if QuickSettings is not available for whatever reason.-->

            <!--Template to style the section.-->
        </Style.Setters>
        
    </Style>

    <!--Style for buttons within the categories at the top of the page in the editor.-->
    <Style x:Key="MenuButton"
           TargetType="{x:Type Button}">

        <Style.Setters>
            <!--Default values to show up in the XAML view, and to use as a backup if QuickSettings is not available for whatever reason.-->
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Tag" Value="/Resources/Images/404-notfound.png"/>

            <!--Template to override default Button hover and click properties as well as style the image and text content.-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel>
                                <Image HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Source="{TemplateBinding Tag, Converter={StaticResource ToImg}}"/>

                                <TextBlock Text="{TemplateBinding Content}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="12"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <!--Theming triggers. These are pretty long, annoyingly, because Trigger objects can't be nested.-->
            <!--Default theming triggers. Anything that changes based ONLY on the theme selected should go in here.-->
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Dark">
                <Setter Property="Background" Value="#2A2A2A"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding QuickStorage.Theme}" Value="Light">
                <Setter Property="Background" Value="#D6D6D6"/>
            </DataTrigger>

            <!--Theming triggers for the IsMouseOver event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#1f1f1f"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#E0E0E0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Theming triggers for the IsPressed event, as well as the theme.-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Dark"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#151515"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding QuickStorage.Theme}" Value="Light"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#EAEAEA"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
        
    </Style>
    
</ResourceDictionary>